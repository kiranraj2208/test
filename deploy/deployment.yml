# microservices components 1 - front
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test
  name: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
        fluentd-log-format: "spring-boot"
    spec:
      # volumes:
      #   - name: elastic-apm-agent
      #     emptyDir: {}
      # initContainers:
      #   - name: elastic-java-agent
      #     image: docker.elastic.co/observability/apm-agent-java:1.12.0
      #     volumeMounts:
      #       - mountPath: /elastic/apm/agent
      #         name: elastic-apm-agent
      #     command:
      #       [
      #         "cp",
      #         "-v",
      #         "/usr/agent/elastic-apm-agent.jar",
      #         "/elastic/apm/agent",
      #       ]
      containers:
        - image: test-image
          imagePullPolicy: Never
          name: test
#          volumeMounts:
#            - mountPath: /elastic/apm/agent
#              name: elastic-apm-agent
          resources:
            limits:
              cpu: "400m"
              memory: "600Mi"
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              port: 8080
              path: /status
              scheme: HTTP
          env:
            - name: spring.application.name
              value: test
            - name: testServiceURL
              value: http://test
            # - name: ELASTIC_APM_SERVER_URL
            #   value: "http://apm-server.kube-logging.svc.cluster.local:8200"
            # - name: ELASTIC_APM_SERVICE_NAME
            #   value: "test"
            # - name: ELASTIC_APM_APPLICATION_PACKAGES
            #   value: "in.brainupgrade"
            # - name: ELASTIC_APM_ENVIRONMENT
            #   value: prod
            # - name: ELASTIC_APM_LOG_LEVEL
            #   value: INFO
            # - name: JAVA_TOOL_OPTIONS
            #   value: -javaagent:/elastic/apm/agent/elastic-apm-agent.jar
            # - name: MYSQL_HOST
            #   value: mysql
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: test
spec:
  type: ClusterIP
  ports:
    - name: app
      port: 80
      targetPort: 8080
  selector:
    app: test
