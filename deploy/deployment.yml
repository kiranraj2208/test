# microservices components 1 - front
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test
  name: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
        fluentd-log-format: "spring-boot"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: /actuator/prometheus
    spec:
      volumes:
        - name: elastic-apm-agent
          emptyDir: {}
        - name: host-m2
          hostPath:
            path: /Users/kiranraj/.m2
      initContainers:
        - name: elastic-java-agent
          image: docker.elastic.co/observability/apm-agent-java:latest
          volumeMounts:
            - mountPath: /elastic/apm/agent
              name: elastic-apm-agent
            - mountPath: /root/.m2
              name: host-m2
          command:
            [
              "cp",
              "-v",
              "/usr/agent/elastic-apm-agent.jar",
              "/elastic/apm/agent",
            ]
      containers:
        - image: test
          imagePullPolicy: Never
          name: test
          resources:
            limits:
              cpu: 200m
              memory: 600Mi
          volumeMounts:
            - mountPath: /elastic/apm/agent
              name: elastic-apm-agent
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              port: 8080
              path: /status
              scheme: HTTP
          env:
            - name: spring.application.name
              value: test
            - name: testServiceURL
              value: http://test
            - name: ELASTIC_APM_SERVER_URL
              value: "http://apm-server.kube-logging.svc.cluster.local:8200"
            - name: ELASTIC_APM_SERVICE_NAME
              value: "test"
            - name: ELASTIC_APM_APPLICATION_PACKAGES
              value: "in.brainupgrade"
            - name: ELASTIC_APM_ENVIRONMENT
              value: prod
            - name: ELASTIC_APM_LOG_LEVEL
              value: INFO
            - name: JAVA_TOOL_OPTIONS
              value: -javaagent:/elastic/apm/agent/elastic-apm-agent.jar
            # - name: MYSQL_HOST
            #   value: mysql
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: test
spec:
  type: ClusterIP
  ports:
    - name: app
      port: 80
      targetPort: 8080
  selector:
    app: test
